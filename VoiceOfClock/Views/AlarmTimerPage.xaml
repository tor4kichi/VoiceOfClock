<Page
  x:Class="VoiceOfClock.Views.AlarmTimerPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:VoiceOfClock.Views"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
  xmlns:uiControls="using:CommunityToolkit.WinUI.UI.Controls"
  xmlns:viewModels="using:VoiceOfClock.ViewModels" 
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:i18n="using:I18NPortable.Xaml.Extensions" 
  xmlns:sys="using:System"
  xmlns:globalization="using:System.Globalization"
    >
  <Page.Resources>
    <DataTemplate x:Key="AlarmTimerTemplate" x:DataType="viewModels:AlarmTimerViewModel">
      <Grid x:Name="Grid_Container" CornerRadius="6" 
            Background="{ThemeResource MicaBackgroundBrush}"
            Padding="12" 
            Translation="0, 0, 16"                  
            BorderThickness="1"
            >
        <Grid.Shadow>
          <ThemeShadow />
        </Grid.Shadow>

        <i:Interaction.Behaviors>
          <core:DataTriggerBehavior Binding="{x:Bind IsEditting, Mode=OneWay}" Value="True" ComparisonCondition="Equal">
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_Time}" PropertyName="Opacity" Value="0.5" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_TimerIntervalTime}" PropertyName="Opacity" Value="0.5" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_TimerTitle}" PropertyName="Opacity" Value="0.5" />
          </core:DataTriggerBehavior>
          <core:DataTriggerBehavior Binding="{x:Bind IsEditting, Mode=OneWay}" Value="False" ComparisonCondition="Equal">
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_Time}" PropertyName="Opacity" Value="1.0" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_TimerIntervalTime}" PropertyName="Opacity" Value="1.0" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_TimerTitle}" PropertyName="Opacity" Value="1.0" />
          </core:DataTriggerBehavior>

          <core:DataTriggerBehavior Binding="{x:Bind NowPlayingNotifyAudio, Mode=OneWay}" Value="True" ComparisonCondition="Equal">
            <core:ChangePropertyAction TargetObject="{Binding ElementName=Grid_Container}" PropertyName="BorderBrush" Value="{ThemeResource AccentAAFillColorDefaultBrush}" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=Grid_NowPlayingNotifyAudio}" PropertyName="Visibility" Value="Visible" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=ToggleSwitch_IsEnabled}" PropertyName="IsEnabled" Value="False" />
          </core:DataTriggerBehavior>
          <core:DataTriggerBehavior Binding="{x:Bind NowPlayingNotifyAudio, Mode=OneWay}" Value="False" ComparisonCondition="Equal">
            <core:ChangePropertyAction TargetObject="{Binding ElementName=Grid_Container}" PropertyName="BorderBrush" Value="{x:Null}" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=Grid_NowPlayingNotifyAudio}" PropertyName="Visibility" Value="Collapsed" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=ToggleSwitch_IsEnabled}" PropertyName="IsEnabled" Value="True" />
          </core:DataTriggerBehavior>
        </i:Interaction.Behaviors>


        
        
        <Grid x:Name="Grid_Content">
          <StackPanel Spacing="8" HorizontalAlignment="Left">
            <StackPanel Orientation="Horizontal">
              <TextBlock x:Name="TextBlock_Time" FontSize="60" FontWeight="SemiBold" TextLineBounds="Tight" VerticalAlignment="Center" >
                <Run Text="{x:Bind LocalizeTime(TimeOfDay), Mode=OneWay}" />
              </TextBlock>
              <Grid x:Name="Grid_TimeZone" Visibility="{x:Bind IsDisplayTimeZone, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                    VerticalAlignment="Bottom"
                    Opacity="0.7"
                    Margin="8 0 0 0"
                    >
                <TextBlock Text="{x:Bind TimeZone.StandardName, Mode=OneWay}" />
              </Grid>
            </StackPanel>

            <Grid x:Name="Grid_NextTimeContainer" Opacity="0.7" Height="24">
              <SymbolIcon x:Name="SymbolIcon_NextTimeIcon" Symbol="Clock" RenderTransformOrigin="0.25, 0.5" Width="20" HorizontalAlignment="Left"
                          Visibility="{x:Bind IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                          >
                <SymbolIcon.RenderTransform>
                  <ScaleTransform ScaleX="0.6" ScaleY="0.6" />
                </SymbolIcon.RenderTransform>
              </SymbolIcon>
              <TextBlock x:Name="TextBlock_NextTime" Text="{x:Bind TargetTime, Mode=OneWay}" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Left" Margin="20 0 0 0"                         
                         Visibility="{x:Bind IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                         >

              </TextBlock>
            </Grid>

            <TextBlock x:Name="TextBlock_TimerTitle" Text="{x:Bind Title, Mode=OneWay}" Style="{StaticResource SubtitleTextBlockStyle}" 
                       Margin="4 0 0 0"
                       MaxWidth="320"
                       MaxLines="1"
                       />

            <ItemsControl ItemsSource="{x:Bind EnabledDayOfWeeks}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" Spacing="8" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="viewModels:EnabledDayOfWeekViewModel">
                  <ToggleButton 
                    Content="{x:Bind globalization:CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedDayName(DayOfWeek)}" 
                    IsChecked="{x:Bind IsEnabled, Mode=OneWay}" 
                    CornerRadius="32"                              
                    Width="30"
                    Height="30"
                    IsTapEnabled="False"
                    IsHitTestVisible="False"
                    FontSize="12"
                    Padding="0"
                    VerticalContentAlignment="Center"
                    />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>

          </StackPanel>

          <ToggleSwitch x:Name="ToggleSwitch_IsEnabled" HorizontalAlignment="Right" VerticalAlignment="Top" IsOn="{x:Bind IsEnabled, Mode=TwoWay}"
                        Style="{StaticResource SettingsToggleSwitch}"                              
                        Visibility="{x:Bind IsEditting, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverterInversed}}"
                        >

          </ToggleSwitch>
        </Grid>


        <Grid x:Name="Grid_Editting" Visibility="{x:Bind IsEditting, Mode=OneWay}" HorizontalAlignment="Right" VerticalAlignment="Top">
          <Button x:Name="Button_Delete" Foreground="OrangeRed" Command="{x:Bind DeleteCommand}" CommandParameter="{x:Bind}"
                  Background="Transparent" BorderThickness="0" Width="40" Height="40" Padding="4">
            <SymbolIcon Symbol="Delete" />
          </Button>
        </Grid>

        <Grid x:Name="Grid_NowPlayingNotifyAudio" Visibility="Collapsed"
              VerticalAlignment="Bottom"
              HorizontalAlignment="Right"
              Margin="0 0 0 72"
              >
          <Button Command="{x:Bind SnoozeNotificationCommand}"
                  Height="48"
                  Width="64"                  
                  Style="{ThemeResource AccentButtonStyle}"
                  Background="{ThemeResource AccentFillColorTertiaryBrush}"
                  Visibility="{x:Bind IsVisibleSnooze(Snooze), Mode=OneWay}"
                  >
            <SymbolIcon Symbol="RepeatOne" />
          </Button>
        </Grid>
        
      </Grid>
    </DataTemplate>
  </Page.Resources>

  <Grid>
    <uiControls:AdaptiveGridView ItemsSource="{x:Bind _vm.Timers}"
                                 ItemTemplate="{StaticResource AlarmTimerTemplate}"                                 
                                 Margin="8"
                                 ItemClickCommand="{x:Bind _vm.EditTimerCommand}"                                 
                                 IsItemClickEnabled="True"
                                 SelectionMode="None"
                                 ItemHeight="180"
                                 DesiredWidth="320"
                                 >
      <uiControls:AdaptiveGridView.ItemContainerStyle>
        <Style TargetType="GridViewItem" BasedOn="{StaticResource GridViewItemMicaStyle}">
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
          <Setter Property="VerticalContentAlignment" Value="Stretch" />
          <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
          <Setter Property="MaxWidth" Value="320" />
          <Setter Property="Margin" Value="6" />
          <Setter Property="CornerRadius" Value="6" />
          <Setter Property="BorderThickness" Value="0.5" />
          <Setter Property="BorderBrush" Value="{ThemeResource  SystemControlBackgroundBaseLowBrush}" />
          <Setter Property="ContextFlyout">
            <Setter.Value>
              <MenuFlyout x:Name="MenuFlyout_TimerItem" Opening="MenuFlyout_TimerItem_Opening">
                <MenuFlyoutItem x:Name="MenuFlyoutItem_TimerEdit" Text="{i18n:Localize Key=Edit}" Icon="Edit" Command="{x:Bind _vm.EditTimerCommand}" CommandParameter="{Binding}" />
                <MenuFlyoutItem x:Name="MenuFlyoutItem_TimerDelete" Text="{i18n:Localize Key=Delete}" Icon="Delete" Command="{x:Bind _vm.DeleteTimerCommand}" CommandParameter="{Binding}" />
              </MenuFlyout>
            </Setter.Value>
          </Setter>
        </Style>
      </uiControls:AdaptiveGridView.ItemContainerStyle>

      <uiControls:AdaptiveGridView.Header>
        <StackPanel>
          <TextBlock Text="{i18n:Localize Key=ScheduledPeriodicTimer}" Style="{StaticResource SubtitleTextBlockStyle}" Margin="8 0"
                     x:Name="TextBlock_ScheduleTitle"
                     Visibility="Collapsed"
                     />
        </StackPanel>
      </uiControls:AdaptiveGridView.Header>
    </uiControls:AdaptiveGridView>

    <StackPanel VerticalAlignment="Bottom">


      <Grid x:Name="Grid_PageActions" HorizontalAlignment="Right"  Margin="24"
          Background="{ThemeResource MicaBackgroundBrush}" Padding="4"
          BorderBrush="{ThemeResource MicaBorderBrush}"
          BorderThickness="1"
          CornerRadius="6"
          Translation="0, 0, 8"             
          >
        <Grid.Shadow>
          <ThemeShadow  />
        </Grid.Shadow>
        <Grid.Resources>
          <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Padding" Value="4" />
          </Style>
          <Style TargetType="SymbolIcon" x:Name="ActionButtonIconStyle">
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="RenderTransform">
              <Setter.Value>
                <ScaleTransform ScaleX="0.80" ScaleY="0.8" />
              </Setter.Value>
            </Setter>
          </Style>
        </Grid.Resources>
        <StackPanel Orientation="Horizontal" Spacing="2">
          <Button x:Name="Button_EditTimers" Command="{x:Bind _vm.DeleteToggleCommand}">
            <SymbolIcon x:Name="SymbolIcon_Edit" Symbol="Edit" Style="{StaticResource ActionButtonIconStyle}" />
          </Button>
          <Button x:Name="Button_AddTimer" Command="{x:Bind _vm.AddTimerCommand}" IsEnabled="{x:Bind _vm.NowEditting, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
            <SymbolIcon Symbol="Add" Style="{StaticResource ActionButtonIconStyle}"  />
          </Button>
        </StackPanel>
      </Grid>


      <Grid x:Name="Grid_ActiveAlarmInformation" Background="{ThemeResource SystemFillColorCautionBackgroundBrush}" Height="40" VerticalAlignment="Bottom" Visibility="Collapsed">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="8" >
          <SymbolIcon Symbol="Important" Foreground="{ThemeResource SystemFillColorCautionBrush}" RenderTransformOrigin="0.5, 0.5">
            <SymbolIcon.RenderTransform>
              <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
            </SymbolIcon.RenderTransform>
          </SymbolIcon>
          <TextBlock Text="{i18n:Localize Key=AlarmTimer_CautionWhenActive}" FontSize="13" FontWeight="SemiBold" VerticalAlignment="Center" />
        </StackPanel>
      </Grid>
    </StackPanel>

    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.SomeTimerIsActive.Value, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Grid_ActiveAlarmInformation.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>

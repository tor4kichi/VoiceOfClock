<Page
  x:Class="VoiceOfClock.Views.PeriodicTimerPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:VoiceOfClock.Views"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:sys="using:System"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:uiControls="using:CommunityToolkit.WinUI.UI.Controls"
  xmlns:viewModels="using:VoiceOfClock.ViewModels" 
  xmlns:myControls="using:VoiceOfClock.Views.Controls" 
  xmlns:muxc="using:Microsoft.UI.Xaml.Controls" 
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:behaviors="using:CommunityToolkit.WinUI.UI.Behaviors"
  xmlns:i18n="using:I18NPortable.Xaml.Extensions"
  mc:Ignorable="d"
  
  >

  <Page.Resources>
    

    <DataTemplate x:Key="PeriodicTimerTemplate" x:DataType="viewModels:PeriodicTimerViewModel">
      <Grid x:Name="Grid_Container" CornerRadius="6" 
            Background="{ThemeResource MicaBackgroundBrush}"
            Padding="12" 
            Translation="0, 0, 16"                  
            >
        <Grid.Shadow>
          <ThemeShadow />
        </Grid.Shadow>

        <i:Interaction.Behaviors>
          <core:DataTriggerBehavior Binding="{x:Bind IsEditting, Mode=OneWay}" Value="True" ComparisonCondition="Equal">
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_Time}" PropertyName="Opacity" Value="0.5" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_TimerIntervalTime}" PropertyName="Opacity" Value="0.5" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_TimerTitle}" PropertyName="Opacity" Value="0.5" />
          </core:DataTriggerBehavior>
          <core:DataTriggerBehavior Binding="{x:Bind IsEditting, Mode=OneWay}" Value="False" ComparisonCondition="Equal">
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_Time}" PropertyName="Opacity" Value="1.0" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_TimerIntervalTime}" PropertyName="Opacity" Value="1.0" />
            <core:ChangePropertyAction TargetObject="{Binding ElementName=TextBlock_TimerTitle}" PropertyName="Opacity" Value="1.0" />
          </core:DataTriggerBehavior>
        </i:Interaction.Behaviors>
     
        <Grid x:Name="Grid_Content">
          <StackPanel Spacing="8" HorizontalAlignment="Left">
            <TextBlock x:Name="TextBlock_Time" FontSize="40" FontWeight="SemiBold" TextLineBounds="Tight" VerticalAlignment="Stretch" >
                <Run Text="{x:Bind LocalizeTime(StartTime), Mode=OneWay}" /> - <Run Text="{x:Bind LocalizeTime(EndTime), Mode=OneWay}" />
            </TextBlock>

            <Grid x:Name="Grid_NextTimeContainer" Opacity="0.7">
              <SymbolIcon x:Name="SymbolIcon_NextTimeIcon" Symbol="Clock" RenderTransformOrigin="0.25, 0.5" Width="20" HorizontalAlignment="Left">
                <SymbolIcon.RenderTransform>
                  <ScaleTransform ScaleX="0.6" ScaleY="0.6" />
                </SymbolIcon.RenderTransform>
              </SymbolIcon>
              <TextBlock x:Name="TextBlock_NextTime" Text="{x:Bind PeriodicTimerRunningInfo.NextTime, Mode=OneWay}" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Left" Margin="20 0 0 0">
                
              </TextBlock>
            </Grid>

            <TextBlock x:Name="TextBlock_TimerTitle" Text="{x:Bind Title, Mode=OneWay}" Style="{StaticResource SubtitleTextBlockStyle}" 
                       Margin="4 0 0 0"
                       MaxWidth="320"
                       MaxLines="1"
                       />

          </StackPanel>

          <TextBlock x:Name="TextBlock_TimerIntervalTime" HorizontalAlignment="Right" Margin="0 40 0 0" FontSize="24">
            <Run Text="{x:Bind LocalizeIntervalTime(IntervalTime), Mode=OneWay}" />
          </TextBlock>

          <ToggleSwitch x:Name="ToggleSwitch_IsEnabled" HorizontalAlignment="Right" VerticalAlignment="Top" IsOn="{x:Bind IsEnabled, Mode=TwoWay}"
                        Style="{StaticResource SettingsToggleSwitch}"                              
                        Visibility="{x:Bind IsEditting, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverterInversed}}"
                        >
            
          </ToggleSwitch>
        </Grid>


        <Grid x:Name="Grid_Editting" Visibility="{x:Bind IsEditting, Mode=OneWay}" HorizontalAlignment="Right" VerticalAlignment="Top">
          <Button x:Name="Button_Delete" Foreground="OrangeRed" Command="{x:Bind DeleteCommand}" CommandParameter="{x:Bind}"
                  Background="Transparent" BorderThickness="0" Width="40" Height="40" Padding="4">
            <SymbolIcon Symbol="Delete" />
          </Button>
        </Grid>

      </Grid>
    </DataTemplate>

    
    
  </Page.Resources>
  
  <Grid>

    <uiControls:AdaptiveGridView ItemsSource="{x:Bind _vm.Timers}"
                                 ItemTemplate="{StaticResource PeriodicTimerTemplate}"                                 
                                 Margin="8"
                                 ItemClickCommand="{x:Bind _vm.EditTimerCommand}"                                 
                                 IsItemClickEnabled="True"
                                 SelectionMode="None"
                                 ItemHeight="120"
                                 DesiredWidth="300"
                                 >
      <uiControls:AdaptiveGridView.ItemContainerStyle>
        <Style TargetType="GridViewItem" BasedOn="{StaticResource GridViewItemMicaStyle}">
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
          <Setter Property="VerticalContentAlignment" Value="Stretch" />
          <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
          <Setter Property="MaxWidth" Value="420" />
          <Setter Property="Margin" Value="6" />
          <Setter Property="CornerRadius" Value="6" />
          <Setter Property="BorderThickness" Value="0.5" />
          <Setter Property="BorderBrush" Value="{ThemeResource  SystemControlBackgroundBaseLowBrush}" />
          <Setter Property="ContextFlyout">
            <Setter.Value>
              <MenuFlyout x:Name="MenuFlyout_TimerItem" Opening="MenuFlyout_TimerItem_Opening">
                <MenuFlyoutItem x:Name="MenuFlyoutItem_TimerEdit" Text="{i18n:Localize Key=Edit}" Icon="Edit" Command="{x:Bind _vm.EditTimerCommand}" CommandParameter="{Binding}" />
                <MenuFlyoutItem x:Name="MenuFlyoutItem_TimerDelete" Text="{i18n:Localize Key=Delete}" Icon="Delete" Command="{x:Bind _vm.DeleteTimerCommand}" CommandParameter="{Binding}" />
              </MenuFlyout>
            </Setter.Value>
          </Setter>
        </Style>
      </uiControls:AdaptiveGridView.ItemContainerStyle>

      <uiControls:AdaptiveGridView.Header>
        <StackPanel>
          <Grid Background="{ThemeResource MicaBackgroundBrush}"
              CornerRadius="6"   
              Padding="12" 
              Translation="0, 0, 8"                  
              HorizontalAlignment="Center"
              Margin="32"
              >
            <Grid.Shadow>
              <ThemeShadow />
            </Grid.Shadow>

            <StackPanel Orientation="Vertical" Spacing="8">
              <StackPanel Spacing="4">
                <Grid>
                  <TimePicker x:Name="TimePicker_ImmidiateRunTimer"
                        SelectedTime="{x:Bind _vm.TimerSettings.InstantPeriodicTimerInterval, Mode=TwoWay}"      
                        FontSize="48"        
                          ClockIdentifier="24HourClock"
                              IsEnabled="{x:Bind _vm.InstantPeriodicTimer.IsEnabled, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                        >
                  </TimePicker>
                  <Grid HorizontalAlignment="Stretch" Opacity="0.5">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{i18n:Localize Key=UnitOfHour}" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsHitTestVisible="False">
                    </TextBlock>
                    <TextBlock Text="{i18n:Localize Key=UnitOfMinute}" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsHitTestVisible="False">
                    </TextBlock>
                  </Grid>
                </Grid>
              </StackPanel>

              <StackPanel VerticalAlignment="Center">
                <Button 
                    x:Name="Button_ImmidiateStart"
                        Command="{x:Bind _vm.StartImmidiateTimerCommand}"
                        CommandParameter="{x:Bind _vm.TimerSettings.InstantPeriodicTimerInterval, Mode=OneWay}"
                    Style="{ThemeResource AccentButtonStyle}"  HorizontalAlignment="Stretch"                    
                        Visibility="{x:Bind _vm.InstantPeriodicTimer.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverterInversed}}"
                    >
                  <StackPanel Orientation="Horizontal" Spacing="12">
                    <SymbolIcon Symbol="Play">
                      
                    </SymbolIcon>

                    <TextBlock Text="{i18n:Localize Key=InstantPeriodicTimer_Start}" />
                  </StackPanel>
                </Button>

                <Button x:Name="Button_ImmidiateStop"
                    Command="{x:Bind _vm.StopImmidiateTimerCommand}"
                    Style="{ThemeResource AccentButtonStyle}"  HorizontalAlignment="Stretch"                    
                    Visibility="{x:Bind _vm.InstantPeriodicTimer.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                    >

                  <StackPanel Orientation="Horizontal" Spacing="12">
                    <SymbolIcon Symbol="Pause" />
                    <TextBlock Text="{i18n:Localize Key=InstantPeriodicTimer_End}" />
                  </StackPanel>
                </Button>
              </StackPanel>

              <Grid Visibility="{x:Bind _vm.InstantPeriodicTimer.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock x:Name="TextBlock_ImmidiateElapsedTime" 
                           Opacity="0.7"
                           >
                  <Run Text="{i18n:Localize Key=Elapsed}" /> <Run Text="{x:Bind _vm.ConvertElapsedTime(_vm.InstantPeriodicTimer.PeriodicTimerRunningInfo.ElapsedTime), Mode=OneWay}" />
                </TextBlock>
                
                <StackPanel Orientation="Horizontal" Spacing="0" HorizontalAlignment="Right">
                  <SymbolIcon x:Name="SymbolIcon_NextTimeIcon" Symbol="Clock" RenderTransformOrigin="0.25, 0.6" Width="20" HorizontalAlignment="Left">
                    <SymbolIcon.RenderTransform>
                      <ScaleTransform ScaleX="0.6" ScaleY="0.6" />
                    </SymbolIcon.RenderTransform>
                  </SymbolIcon>

                  <TextBlock x:Name="TextBlock_ImmidiateNextTime" 
                           Opacity="0.7"
                           >
                    <Run Text="{x:Bind _vm.ConvertDateTime(_vm.InstantPeriodicTimer.PeriodicTimerRunningInfo.NextTime), Mode=OneWay}" />
                  </TextBlock>
                </StackPanel>
              </Grid>
            </StackPanel>
          </Grid>

          <TextBlock Text="{i18n:Localize Key=ScheduledPeriodicTimer}" Style="{StaticResource SubtitleTextBlockStyle}" Margin="8 0"
                     x:Name="TextBlock_ScheduleTitle"
                     />
        </StackPanel>
      </uiControls:AdaptiveGridView.Header>
    </uiControls:AdaptiveGridView>
    
    <Grid x:Name="Grid_PageActions" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="32"
          Background="{ThemeResource MicaBackgroundBrush}" Padding="4"
          BorderBrush="{ThemeResource MicaBorderBrush}"
          BorderThickness="1"
          CornerRadius="6"
          Translation="0, 0, 8"             
          >
      <Grid.Shadow>
        <ThemeShadow  />
      </Grid.Shadow>
      <Grid.Resources>
        <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
          <Setter Property="Background" Value="Transparent" />
          <Setter Property="BorderBrush" Value="Transparent" />
          <Setter Property="Width" Value="40" />
          <Setter Property="Height" Value="40" />
          <Setter Property="Padding" Value="4" />
        </Style>
        <Style TargetType="SymbolIcon" x:Name="ActionButtonIconStyle">
          <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
          <Setter Property="RenderTransform">
            <Setter.Value>
              <ScaleTransform ScaleX="0.80" ScaleY="0.8" />
            </Setter.Value>
          </Setter>
        </Style>
      </Grid.Resources>
      <StackPanel Orientation="Horizontal" Spacing="2">
        <Button x:Name="Button_EditTimers" Command="{x:Bind _vm.DeleteToggleCommand}">
          <SymbolIcon x:Name="SymbolIcon_Edit" Symbol="Edit" Style="{StaticResource ActionButtonIconStyle}" />
        </Button>
        <Button x:Name="Button_AddTimer" Command="{x:Bind _vm.AddTimerCommand}" IsEnabled="{x:Bind _vm.NowEditting, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
          <SymbolIcon Symbol="Add" Style="{StaticResource ActionButtonIconStyle}"  />
        </Button>
      </StackPanel>
    </Grid>
 
  </Grid>
</Page>

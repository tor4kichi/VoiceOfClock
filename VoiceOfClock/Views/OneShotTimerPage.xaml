<Page
  x:Class="VoiceOfClock.Views.OneShotTimerPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:VoiceOfClock.Views"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
  xmlns:uiControls="using:CommunityToolkit.WinUI.UI.Controls"
  xmlns:viewModels="using:VoiceOfClock.ViewModels" 
  xmlns:myControls="using:VoiceOfClock.Views.Controls" 
  xmlns:muxc="using:Microsoft.UI.Xaml.Controls" 
  xmlns:i="using:Microsoft.Xaml.Interactivity"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:behaviors="using:CommunityToolkit.WinUI.UI.Behaviors"
  xmlns:toolkit="using:CommunityToolkit.WinUI.UI"
  xmlns:i18n="using:I18NPortable.Xaml.Extensions" xmlns:sys="using:System">

  <Page.Resources>


    <DataTemplate x:Key="PeriodicTimerTemplate" x:DataType="viewModels:OneShotTimerViewModel">
      <Grid x:Name="Grid_Container" CornerRadius="6"             
            Padding="12 8" 
            Translation="0, 0, 16"                
            Background="{ThemeResource MicaBackgroundBrush}"               
            >
        <Grid.Shadow>
          <ThemeShadow />
        </Grid.Shadow>

        <i:Interaction.Behaviors>
          <core:DataTriggerBehavior Binding="{x:Bind IsEditting, Mode=OneWay}" Value="True" ComparisonCondition="Equal">
            <core:ChangePropertyAction TargetObject="{Binding ElementName=Grid_Content}" PropertyName="Opacity" Value="0.5" />
          </core:DataTriggerBehavior>
          <core:DataTriggerBehavior Binding="{x:Bind IsEditting, Mode=OneWay}" Value="False" ComparisonCondition="Equal">
            <core:ChangePropertyAction TargetObject="{Binding ElementName=Grid_Content}" PropertyName="Opacity" Value="1.0" />
          </core:DataTriggerBehavior>
        </i:Interaction.Behaviors>

        <Grid x:Name="Grid_Content">
          <StackPanel Spacing="4">

            <uiControls:DockPanel>
              <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Spacing="8"
                      Visibility="Collapsed"
                          uiControls:DockPanel.Dock="Right"
                      >
                <Button>
                  <SymbolIcon Symbol="FullScreen" />
                </Button>
                <Button>
                  <SymbolIcon Symbol="NewWindow" />
                </Button>
              </StackPanel>

              <TextBlock Text="{x:Bind Title, Mode=OneWay}" FontWeight="SemiBold" VerticalAlignment="Top" HorizontalAlignment="Left" />
            </uiControls:DockPanel>
            
            <Grid HorizontalAlignment="Center" >

              <Border x:Name="Grid_ProgressRingBack"                                        
                    BorderThickness="18"
                    Width="212" Height="212"
                    CornerRadius="180"
                      Visibility="Visible"
                      BorderBrush="{ThemeResource SystemControlBaseMediumLowAcrylicElementMediumBrush}"                                            
                    >
              </Border>

              <ProgressRing Width="220" Height="220" IsIndeterminate="False"
                            Minimum="0" Maximum="{x:Bind viewModels:OneShotTimerViewModel.ConvertToDouble(Time), Mode=OneWay}" 
                            Value="{x:Bind viewModels:OneShotTimerViewModel.ConvertToDouble(RemainingTime), Mode=OneWay}"                                                                  
                            IsActive="{x:Bind IsTimerActive, Mode=OneWay}"                              
                                 >
                <i:Interaction.Behaviors>
                  <core:DataTriggerBehavior Binding="{x:Bind IsEditting, Mode=OneWay}" Value="True" ComparisonCondition="Equal">
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=Grid_Content}" PropertyName="Opacity" Value="0.5" />
                  </core:DataTriggerBehavior>
                  <core:DataTriggerBehavior Binding="{x:Bind IsEditting, Mode=OneWay}" Value="False" ComparisonCondition="Equal">
                    <core:ChangePropertyAction TargetObject="{Binding ElementName=Grid_Content}" PropertyName="Opacity" Value="1.0" />
                  </core:DataTriggerBehavior>
                </i:Interaction.Behaviors>
              </ProgressRing>


              <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="1">
                <TextBlock x:Name="TextBlock_Time_Hour" FontSize="40" TextLineBounds="Tight" FontWeight="SemiBold"  VerticalAlignment="Center"
                           Width="44"                           
                         >
                  <Run Text="{x:Bind sys:String.Format('{0:d2}', RemainingTime.Hours), Mode=OneWay}" />
                </TextBlock>
                <TextBlock FontSize="40" Text=":" FontWeight="SemiBold" Margin="0 0 0 12" />
                <TextBlock x:Name="TextBlock_Time_Minute" FontSize="40" TextLineBounds="Tight" FontWeight="SemiBold" VerticalAlignment="Center"
                           Width="44"
                         >
                  <Run Text="{x:Bind sys:String.Format('{0:d2}', RemainingTime.Minutes), Mode=OneWay}" />
                </TextBlock>
                <TextBlock FontSize="40" Text=":" FontWeight="SemiBold" Margin="0 0 0 12" />
                <TextBlock x:Name="TextBlock_Time_Second" FontSize="40" TextLineBounds="Tight" FontWeight="SemiBold" VerticalAlignment="Center"
                           Width="44"
                         >
                  <Run Text="{x:Bind sys:String.Format('{0:d2}', RemainingTime.Seconds), Mode=OneWay}" />
                </TextBlock>
              </StackPanel>
              
              

              <Grid x:Name="Grid_NextTimeContainer" Opacity="0.7" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 84 0 0"
                    Visibility="{x:Bind IsRunning, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                    Background="{ThemeResource SystemBaseMediumLowColor}"
                    CornerRadius="10"
                    Padding="8 4"
                    >
                <SymbolIcon x:Name="SymbolIcon_NextTimeIcon" Symbol="Clock" RenderTransformOrigin="0.25, 0.5" Width="20" HorizontalAlignment="Left">
                  <SymbolIcon.RenderTransform>
                    <ScaleTransform ScaleX="0.6" ScaleY="0.6" />
                  </SymbolIcon.RenderTransform>
                </SymbolIcon>
                <TextBlock x:Name="TextBlock_NextTime" Text="{x:Bind viewModels:OneShotTimerViewModel.ConvertTime(EndTime), Mode=OneWay}" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Left" Margin="16 0 0 0">

                </TextBlock>
              </Grid>
            </Grid>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="8">
              <Button Command="{x:Bind ToggleTimerStartAndStopCommand}" Style="{ThemeResource AccentButtonStyle}">
                <SymbolIcon Symbol="Play">
                  <i:Interaction.Behaviors>
                    <core:DataTriggerBehavior Binding="{x:Bind IsRunning, Mode=OneWay}" Value="True" ComparisonCondition="Equal">
                      <core:ChangePropertyAction PropertyName="Symbol" Value="Pause" />
                    </core:DataTriggerBehavior>
                    <core:DataTriggerBehavior Binding="{x:Bind IsRunning, Mode=OneWay}" Value="False" ComparisonCondition="Equal">
                      <core:ChangePropertyAction PropertyName="Symbol" Value="Play" />
                    </core:DataTriggerBehavior>
                  </i:Interaction.Behaviors>
                </SymbolIcon>
              </Button>
              <Button Command="{x:Bind RewindTimerCommand}">
                <SymbolIcon Symbol="Refresh" />
              </Button>
            </StackPanel>
          </StackPanel>
        </Grid>


        <Grid x:Name="Grid_Editting" Visibility="{x:Bind IsEditting, Mode=OneWay}" HorizontalAlignment="Right" VerticalAlignment="Top">
          <Button x:Name="Button_Delete" Foreground="OrangeRed" Command="{x:Bind DeleteCommand}" CommandParameter="{x:Bind}"
                  Background="Transparent" BorderThickness="0" Width="40" Height="40" Padding="4">
            <SymbolIcon Symbol="Delete" />
          </Button>
        </Grid>

      </Grid>
    </DataTemplate>



  </Page.Resources>

  <Grid>
    
    <uiControls:AdaptiveGridView ItemsSource="{x:Bind _vm.Timers, Mode=OneWay}"
                                 ItemTemplate="{StaticResource PeriodicTimerTemplate}"                                 
                                 Margin="8"
                                 ItemClickCommand="{x:Bind _vm.EditTimerCommand}"                                 
                                 IsItemClickEnabled="True"
                                 SelectionMode="None"
                                 ItemHeight="310"
                                 DesiredWidth="320"
                                 >
      <uiControls:AdaptiveGridView.ItemContainerStyle>
        <Style TargetType="GridViewItem" BasedOn="{StaticResource GridViewItemMicaStyle}">
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
          <Setter Property="VerticalContentAlignment" Value="Stretch" />
          <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
          <Setter Property="MaxWidth" Value="320" />
          <Setter Property="Margin" Value="6" />
          <Setter Property="CornerRadius" Value="6" />
          <Setter Property="BorderThickness" Value="0.5" />
          <Setter Property="BorderBrush" Value="{ThemeResource  SystemControlBackgroundBaseLowBrush}" />
          <Setter Property="ContextFlyout">
            <Setter.Value>
              <MenuFlyout x:Name="MenuFlyout_TimerItem" Opening="MenuFlyout_TimerItem_Opening">
                <MenuFlyoutItem x:Name="MenuFlyoutItem_TimerEdit" Text="{i18n:Localize Key=Edit}" Icon="Edit" Command="{x:Bind _vm.EditTimerCommand}" CommandParameter="{Binding}" />
                <MenuFlyoutItem x:Name="MenuFlyoutItem_TimerDelete" Text="{i18n:Localize Key=Delete}" Icon="Delete" Command="{x:Bind _vm.DeleteTimerCommand}" CommandParameter="{Binding}" />
              </MenuFlyout>
            </Setter.Value>
          </Setter>
        </Style>
      </uiControls:AdaptiveGridView.ItemContainerStyle>

      <uiControls:AdaptiveGridView.Header>
        <StackPanel>
          <TextBlock Text="{i18n:Localize Key=ScheduledPeriodicTimer}" Style="{StaticResource SubtitleTextBlockStyle}" Margin="8 0"
                     x:Name="TextBlock_ScheduleTitle"
                     Visibility="Collapsed"
                     />
        </StackPanel>
      </uiControls:AdaptiveGridView.Header>
    </uiControls:AdaptiveGridView>

    <StackPanel VerticalAlignment="Bottom">
      <Grid x:Name="Grid_PageActions" HorizontalAlignment="Right" Margin="24"
          Background="{ThemeResource MicaBackgroundBrush}" Padding="4"
          BorderBrush="{ThemeResource MicaBorderBrush}"
          BorderThickness="1"
          CornerRadius="6"
          Translation="0, 0, 8"             
          >
        <Grid.Shadow>
          <ThemeShadow  />
        </Grid.Shadow>
        <Grid.Resources>
          <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Padding" Value="4" />
          </Style>
          <Style TargetType="SymbolIcon" x:Name="ActionButtonIconStyle">
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="RenderTransform">
              <Setter.Value>
                <ScaleTransform ScaleX="0.80" ScaleY="0.8" />
              </Setter.Value>
            </Setter>
          </Style>
        </Grid.Resources>
        <StackPanel Orientation="Horizontal" Spacing="2">
          <Button x:Name="Button_EditTimers" Command="{x:Bind _vm.DeleteToggleCommand}">
            <SymbolIcon x:Name="SymbolIcon_Edit" Symbol="Edit" Style="{StaticResource ActionButtonIconStyle}" />
          </Button>
          <Button x:Name="Button_AddTimer" Command="{x:Bind _vm.AddTimerCommand}" IsEnabled="{x:Bind _vm.NowEditting, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
            <SymbolIcon Symbol="Add" Style="{StaticResource ActionButtonIconStyle}"  />
          </Button>
        </StackPanel>
      </Grid>
      
      <Grid x:Name="Grid_ActiveAlarmInformation" Background="{ThemeResource SystemFillColorCautionBackgroundBrush}" Height="40" VerticalAlignment="Bottom" Visibility="Collapsed">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="8" >
          <SymbolIcon Symbol="Important" Foreground="{ThemeResource SystemFillColorCautionBrush}" RenderTransformOrigin="0.5, 0.5">
            <SymbolIcon.RenderTransform>
              <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
            </SymbolIcon.RenderTransform>
          </SymbolIcon>
          <TextBlock Text="{i18n:Localize Key=OneShotTimer_CautionWhenActive}" FontSize="13" FontWeight="SemiBold" VerticalAlignment="Center" />
        </StackPanel>
      </Grid>
    </StackPanel>
    
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <StateTrigger IsActive="{x:Bind _vm.SomeTimerIsActive.Value, Mode=OneWay}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Grid_ActiveAlarmInformation.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
